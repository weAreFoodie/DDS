input {
  elasticsearch {
        hosts => ["http://localhost:9200"]  # Elasticsearch 호스트
        index => "stock"         # Elasticsearch 인덱스 이름
        query => '{
          "size": 1,
          "query": {
            "match_all": {}
          },
          "sort": [
            {
              "STCK_CNTG_HOUR": {
                "order": "desc"
              }
            }
          ]
        }'
        schedule => "*/10 * * * *"         # 매 10분마다 실행
    }
}

filter {
    ruby {
      code => '
        last_processed_time = File.exist?("/path/to/last_time") ? File.read("/path/to/last_time").strip : nil
        current_time = event.get("STCK_CNTG_HOUR")
        if last_processed_time && current_time <= last_processed_time
          event.cancel
        else
          File.open("/path/to/last_time", "w") { |f| f.write(current_time) }
        end
      '
    }

    ruby {
        code => '
            cntg_hour = event.get("STCK_CNTG_HOUR")
            if cntg_hour
                # UTC 기준 시간을 KST로 변환
                formatted_time = Time.parse(cntg_hour).getlocal("+09:00").strftime("%Y-%m-%d %H:%M:%S")
                event.set("STCK_CNTG_HOUR", formatted_time)
            end
        '
    }
}

output {
  # 콘솔창에 어떤 데이터들로 필터링 되었는지 확인
  stdout {
    codec => rubydebug
  }

  jdbc {
        driver_jar_path => "C:\\02.devEnv\\ELK\\mysql-connector-j-8.2.0\\mysql-connector-j-8.2.0.jar"  # MySQL JDBC 드라이버 경로
        driver_class => "com.mysql.cj.jdbc.Driver"
        connection_string => "jdbc:mysql://<ip>:<port>/stock?useSSL=false&allowPublicKeyRetrieval=true&user=<user id>&password=<user pw>"  # < >: 각자 환경의 데이터 삽입
        statement => [
            "INSERT INTO kr_stock_trade (mksc_shrn_iscd, stck_cntg_hour, stck_prpr, cntg_vol, acml_vol, stck_hgpr, stck_lwpr, now_time) VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)",
            "%{MKSC_SHRN_ISCD}", "%{STCK_CNTG_HOUR}", "%{STCK_PRPR}", "%{CNTG_VOL}", "%{ACML_VOL}", "%{STCK_HGPR}", "%{STCK_LWPR}"
        ]
    }
}
